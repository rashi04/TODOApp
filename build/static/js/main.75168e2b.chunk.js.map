{"version":3,"sources":["Components/AddTodo.js","Components/TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","props","React","useState","priority","setPriority","title","setTile","className","type","placeholder","min","max","limit","onChange","event","target","value","required","onClick","preventDefault","addData","class","TodoItem","item","displayTitle","setDisplayTitle","displayPriority","setDisplayPriority","editMode","setEditMode","onDoubleClick","ev","onBlur","editItem","id","style","display","e","removeItem","App","toDoList","setToDoList","useEffect","availableToDoList","localStorage","getItem","availableToDoObj","JSON","parse","length","items","filter","setItem","stringify","i","Math","floor","random","alert","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75168e2b.chunk.js","sourcesContent":["import React from 'react';\n\nconst AddTodo = (props) => {\n  const [priority, setPriority] = React.useState(0);\n  const [title, setTile] = React.useState('');\n  const changePriority = (event) => {\n    setPriority(event.target.value);\n  };\n  const changeTitle = (event) => {\n    setTile(event.target.value);\n  };\n  const addItem = (event) => {\n    if (priority && title) {\n      event.preventDefault();\n      props.addData(priority, title);\n    }\n  };\n  return (\n    <header>\n      <h2> My To Do List</h2>\n      <form className=\"input-title\">\n        <input type=\"number\" placeholder=\"Priority\" min=\"1\" max={props.limit} onChange={changePriority} required />\n        <input type=\"text\" placeholder=\"Title...\" onChange={changeTitle} required />\n        <button onClick={addItem} class=\"add-btn\">\n          Add\n        </button>\n      </form>\n    </header>\n  );\n};\n\nexport default AddTodo;\n","import React, { useState } from 'react';\n\nconst TodoItem = (props) => {\n  const [displayTitle, setDisplayTitle] = useState(props.item.title);\n  const [displayPriority, setDisplayPriority] = useState(props.item.priority);\n  const [editMode, setEditMode] = useState(false);\n\n  const removeItem = (ev) => {\n    props.removeItem(props.item.id);\n  };\n  const editModeOn = (ev) => {\n    setEditMode(true);\n  };\n  const editItem = (ev) => {\n    if (displayPriority && displayTitle) {\n      ev.preventDefault();\n      setEditMode(false);\n      props.editItem(props.item.id, displayPriority, displayTitle);\n    }\n  };\n  return (\n    <li onDoubleClick={editModeOn} className={editMode ? 'editMode' : ''} onBlur={editItem}>\n      <label> {displayPriority + '  ' + displayTitle}</label>\n      <form style={{ display: 'inline' }}>\n        <input\n          type=\"number\"\n          value={displayPriority}\n          min={1}\n          max={props.limit}\n          onChange={(e) => setDisplayPriority(e.target.value)}\n          required\n        />\n        <input type=\"text\" value={displayTitle} onChange={(e) => setDisplayTitle(e.target.value)} required />\n        <button className=\"delBtn\" onClick={removeItem}>\n          <i className=\"fa fa-trash\"></i>\n        </button>\n      </form>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useEffect, useState } from 'react';\n\nimport AddTodo from './Components/AddTodo';\nimport './App.css';\nimport TodoItem from './Components/TodoItem';\n\nconst LIMIT_MAX_TO_DO = 15;\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([]);\n\n  useEffect(() => {\n    let availableToDoList = localStorage.getItem('todoList');\n    if (availableToDoList) {\n      let availableToDoObj = JSON.parse(availableToDoList);\n      if (availableToDoObj.length > 0) {\n        setToDoList(availableToDoObj);\n      }\n    }\n  }, []);\n\n  function getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  const addData = (priority, title) => {\n    let item = {};\n    item.id = getRndInteger(1, 20);\n    item.title = title;\n    item.priority = priority;\n    if (toDoList.length >= LIMIT_MAX_TO_DO) {\n      alert(` Maximum items in your to do can be: ${LIMIT_MAX_TO_DO}`);\n    } else {\n      setToDoList([...toDoList, item]);\n      localStorage.setItem('todoList', JSON.stringify(toDoList));\n    }\n  };\n  const removeItem = (id) => {\n    const items = toDoList.filter((item) => item.id !== id);\n    setToDoList([...items]);\n    localStorage.setItem('todoList', JSON.stringify([...items]));\n  };\n  const editItem = (id, priority, title) => {\n    let items = [...toDoList];\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].id === id) {\n        items[i].priority = priority;\n        items[i].title = title;\n        break;\n      }\n    }\n    setToDoList([...items]);\n    localStorage.setItem('todoList', JSON.stringify([...items]));\n  };\n\n  return (\n    <div className=\"container\">\n      <AddTodo limit={LIMIT_MAX_TO_DO} addData={addData} />\n      <div className=\"\">\n        <ul>\n          {toDoList.map((item) => {\n            return (\n              <TodoItem limit={LIMIT_MAX_TO_DO} key={item.id} editItem={editItem} removeItem={removeItem} item={item} />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}